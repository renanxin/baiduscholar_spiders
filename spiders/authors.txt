import pymongo
from selenium import webdriver
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from scrapy.http import HtmlResponse
from logging import getLogger
from urllib.parse import quote
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from scrapy import Selector
from urllib import request
import time
from selenium.webdriver.common.action_chains import ActionChains
from pyquery import PyQuery as pq
import re
import datetime
import random
from fake_useragent import UserAgent

ua = UserAgent()
usr_gent = ''

from pyvirtualdisplay import Display
display = Display(visible=0, size=(1024, 768))
display.start()
chrome_options = Options()
# chrome_options.add_argument('--headless')
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument('--disable-gpu')

author_base_url = 'http://xueshu.baidu.com/scholarID/%s'
paper_base_url = 'http://xueshu.baidu.com/usercenter/paper/show?paperid=%s'
mongo_url = "mongodb://localhost:27017"
start_url = 'http://xueshu.baidu.com/usercenter/data/authorchannel?cmd=inject_page&author=%s&affiliate='

# client = pymongo.MongoClient(mongo_url)
# db = client['author']
# with open('scholarID.txt','w') as file:
#     authors = db['authors'].find()
#     for author in authors[0:100]:
#         if 'scholarID' in author.keys():
#             file.write(author['scholarID']+'\n')
# client.close()

try_num = 0
line = 80
line_num = 1

with open('scholarID.txt', 'r') as file:
    scholarID = file.readline().strip()
    while line_num < 138:
        scholarID = file.readline().strip()
        line_num += 1
    while scholarID != None:
        try:
            #line += 1
            browser = webdriver.Chrome(options=chrome_options)
            chrome_options = Options()
            # chrome_options.add_argument('--headless')
            chrome_options.add_argument("--no-sandbox")
            chrome_options.add_argument('--disable-gpu')
            client = pymongo.MongoClient(mongo_url)
            try:
                browser.get(author_base_url % scholarID)
                WebDriverWait(browser,10).until(EC.presence_of_element_located((By.CSS_SELECTOR,'.p_name')))
                author = {}
                author['name'] = browser.find_element_by_css_selector('.p_name').text
                print(author['name'],line)
                arrow = ['a']
                author['papers'] = []
                WebDriverWait(browser,10).until(EC.presence_of_element_located((By.CSS_SELECTOR,'span[class="filter_sel_text"]')))
                while arrow != []:
                    time.sleep(random.random()*0.5)
                    select = Selector(text=browser.page_source)
                    papers = select.css('.in_conternt_reslist .result .reqdata')
                    for paper in papers:
                        paperID = paper.xpath('./@data-longsign').extract_first()
                        if paperID not in author['papers']:
                            author['papers'].append(paperID)
                    arrow = select.css('a[class="c-icon-page-next-hover res-page-next pagenumber"]')
                    print(len(author['papers']),author['papers'][-1])
                    if arrow != [] :
                        try:
                            WebDriverWait(browser,5).until(EC.element_to_be_clickable((By.CSS_SELECTOR,'a[class="c-icon-page-next-hover res-page-next pagenumber"]')))
                        except:
                            pass
                        button = browser.find_element_by_css_selector('a[class="c-icon-page-next-hover res-page-next pagenumber"]')
                        ActionChains(browser).move_to_element(button).click().perform()
                db = client['author']
                db['authors'].update_one({'scholarID': scholarID}, {'$set': {'name':author['name'],'papers':author['papers']}},upsert=True)
                client.close()
                browser.quit()
                scholarID = file.readline().strip()
                time.sleep(3)
                line += 1
            except:
                try_num += 1
                browser.quit()
                client.close()
                if try_num > 3:
                    scholarID = file.readline().strip()
                    try_num = 0
                time.sleep(1)

            new_gent = ua.chrome
            while new_gent == usr_gent:
                new_gent = ua.chrome
            usr_gent = new_gent
            chrome_options.add_argument('user-agent="%s"' % usr_gent)
        except:
            print('error')
            time.sleep(20)

display.stop()